/*
 * This file is generated by jOOQ.
 */
package ngari.caroline.jooq.tables.records;


import ngari.caroline.jooq.tables.Staff;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>staff.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>staff.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>staff.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>staff.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>staff.position</code>.
     */
    public void setPosition(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>staff.position</code>.
     */
    public String getPosition() {
        return (String) get(2);
    }

    /**
     * Setter for <code>staff.staff_role</code>.
     */
    public void setStaffRole(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>staff.staff_role</code>.
     */
    public String getStaffRole() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Staff.STAFF.ID;
    }

    @Override
    public Field<String> field2() {
        return Staff.STAFF.NAME;
    }

    @Override
    public Field<String> field3() {
        return Staff.STAFF.POSITION;
    }

    @Override
    public Field<String> field4() {
        return Staff.STAFF.STAFF_ROLE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPosition();
    }

    @Override
    public String component4() {
        return getStaffRole();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPosition();
    }

    @Override
    public String value4() {
        return getStaffRole();
    }

    @Override
    public StaffRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StaffRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StaffRecord value3(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public StaffRecord value4(String value) {
        setStaffRole(value);
        return this;
    }

    @Override
    public StaffRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StaffRecord
     */
    public StaffRecord() {
        super(Staff.STAFF);
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    public StaffRecord(Integer id, String name, String position, String staffRole) {
        super(Staff.STAFF);

        setId(id);
        setName(name);
        setPosition(position);
        setStaffRole(staffRole);
        resetChangedOnNotNull();
    }
}
